// Copyright 2024 J.W. Lagendijk. All rights reserved. MIT license.
import { AbstractPastebin } from "../lib/Pastebin.js";
import fs from "fs/promises";
import { Buffer } from "buffer";
import fetch from "node-fetch";
import { XMLParser } from "fast-xml-parser";
const parser = new XMLParser();
export class Pastebin extends AbstractPastebin {
    constructor(config) {
        super(config, {
            fetch: fetch,
            parseXML: (xml) => {
                const data = parser.parse(xml);
                return data;
            },
        });
    }
    async createPasteFromFile(options = { file: "" }) {
        if (options.file === "") {
            return Promise.reject(new Error("File needed!"));
        }
        let data;
        try {
            if (Buffer.isBuffer(options.file)) {
                data = options.file.toString("utf-8");
            }
            else {
                data = await fs.readFile(options.file, "utf-8");
            }
        }
        catch (error) {
            return Promise.reject(new Error(`Error reading file! ${error}`));
        }
        if (data.length === 0) {
            return Promise.reject(new Error("Empty file!"));
        }
        const pasteOpts = options;
        delete pasteOpts.file;
        pasteOpts.text = data;
        return this.createPaste(pasteOpts);
    }
}
